// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ee.itcollege.piirivalve.web;

import ee.piirivalve.entities.BorderGuard;
import ee.piirivalve.entities.BorderSection;
import ee.piirivalve.entities.CrossingPoint;
import ee.piirivalve.entities.Guard;
import ee.piirivalve.entities.Location;
import ee.piirivalve.entities.Troops;
import java.lang.String;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(new BorderGuardConverter());
        registry.addConverter(new BorderSectionConverter());
        registry.addConverter(new CrossingPointConverter());
        registry.addConverter(new GuardConverter());
        registry.addConverter(new LocationConverter());
        registry.addConverter(new TroopsConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
    static class ee.itcollege.piirivalve.web.ApplicationConversionServiceFactoryBean.BorderGuardConverter implements Converter<BorderGuard, String> {
        public String convert(BorderGuard borderGuard) {
            return new StringBuilder().append(borderGuard.getName()).toString();
        }
        
    }
    
    static class ee.itcollege.piirivalve.web.ApplicationConversionServiceFactoryBean.BorderSectionConverter implements Converter<BorderSection, String> {
        public String convert(BorderSection borderSection) {
            return new StringBuilder().append(borderSection.getCode()).append(" ").append(borderSection.getName()).append(" ").append(borderSection.getComment()).append(" ").append(borderSection.getLongitude()).toString();
        }
        
    }
    
    static class ee.itcollege.piirivalve.web.ApplicationConversionServiceFactoryBean.CrossingPointConverter implements Converter<CrossingPoint, String> {
        public String convert(CrossingPoint crossingPoint) {
            return new StringBuilder().append(crossingPoint.getCode()).append(" ").append(crossingPoint.getName()).append(" ").append(crossingPoint.getComment()).append(" ").append(crossingPoint.getLongitude()).toString();
        }
        
    }
    
    static class ee.itcollege.piirivalve.web.ApplicationConversionServiceFactoryBean.GuardConverter implements Converter<Guard, String> {
        public String convert(Guard guard) {
            return new StringBuilder().append(guard.getName()).toString();
        }
        
    }
    
    static class ee.itcollege.piirivalve.web.ApplicationConversionServiceFactoryBean.LocationConverter implements Converter<Location, String> {
        public String convert(Location location) {
            return new StringBuilder().append(location.getName()).toString();
        }
        
    }
    
    static class ee.itcollege.piirivalve.web.ApplicationConversionServiceFactoryBean.TroopsConverter implements Converter<Troops, String> {
        public String convert(Troops troops) {
            return new StringBuilder().append(troops.getCode()).append(" ").append(troops.getName()).append(" ").append(troops.getComment()).append(" ").append(troops.getStartdate()).toString();
        }
        
    }
    
}
